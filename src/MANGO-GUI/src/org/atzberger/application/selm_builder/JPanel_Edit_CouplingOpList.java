package org.atzberger.application.selm_builder;

import org.atzberger.mango.table.JTable_Properties1_Default;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * Panel for editing the list of named data of this type.
 *
 * @author Paul J. Atzberger
 *
 * @see <a href="http://www.atzberger.org">http://www.atzberger.org</a>
 */
public class JPanel_Edit_CouplingOpList extends javax.swing.JPanel {

  application_SharedData applSharedData = null;

  String [] listCouplingOpKnownTypesStr = new String[0];

  /** Creates new form JPanel_Edit_CouplingOpList */
  public JPanel_Edit_CouplingOpList() {
    initComponents();

    jTable_CouplingOperatorList.getModel().addTableModelListener(new TableModelListener() {
      public void tableChanged(TableModelEvent e)  {
        jTable_CouplingOpList_tableChanged(e);
      }
    });

  }

  public JPanel_Edit_CouplingOpList(application_SharedData applSharedData_in) {
    this(); /* call constructor */
    applSharedData = applSharedData_in;    
  }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Organize_Controls = new javax.swing.JPanel();
        jButton_Edit_CouplingOp = new javax.swing.JButton();
        jComboBox_Add_CouplingOp = new javax.swing.JComboBox();
        jButton_Remove_CouplingOp = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_CouplingOperatorList = new org.atzberger.mango.table.JTable_Properties1_Default();

        setName("BASE PANEL CLASS"); // NOI18N
        setPreferredSize(new java.awt.Dimension(312, 312));

        jPanel_Organize_Controls.setName("jPanel_Organize_Controls"); // NOI18N
        jPanel_Organize_Controls.setPreferredSize(new java.awt.Dimension(500, 69));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.atzberger.application.selm_builder.application_Main.class).getContext().getResourceMap(JPanel_Edit_CouplingOpList.class);
        jButton_Edit_CouplingOp.setText(resourceMap.getString("jButton_Edit_CouplingOp.text")); // NOI18N
        jButton_Edit_CouplingOp.setName("jButton_Edit_CouplingOp"); // NOI18N
        jButton_Edit_CouplingOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Edit_CouplingOpActionPerformed(evt);
            }
        });

        jComboBox_Add_CouplingOp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Add Coupling Operator", "Item 1", "Item 2" }));
        jComboBox_Add_CouplingOp.setName("jComboBox_Add_CouplingOp"); // NOI18N
        jComboBox_Add_CouplingOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Add_CouplingOpActionPerformed(evt);
            }
        });

        jButton_Remove_CouplingOp.setText(resourceMap.getString("jButton_Remove_CouplingOp.text")); // NOI18N
        jButton_Remove_CouplingOp.setName("jButton_Remove_CouplingOp"); // NOI18N
        jButton_Remove_CouplingOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Remove_CouplingOpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_Organize_ControlsLayout = new javax.swing.GroupLayout(jPanel_Organize_Controls);
        jPanel_Organize_Controls.setLayout(jPanel_Organize_ControlsLayout);
        jPanel_Organize_ControlsLayout.setHorizontalGroup(
            jPanel_Organize_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Organize_ControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox_Add_CouplingOp, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_Edit_CouplingOp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jButton_Remove_CouplingOp)
                .addContainerGap())
        );
        jPanel_Organize_ControlsLayout.setVerticalGroup(
            jPanel_Organize_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Organize_ControlsLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel_Organize_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Organize_ControlsLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jComboBox_Add_CouplingOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_Organize_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_Edit_CouplingOp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Remove_CouplingOp)))
                .addContainerGap())
        );

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable_CouplingOperatorList.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jTable_CouplingOperatorList.border.lineColor"))); // NOI18N
        jTable_CouplingOperatorList.setModel(new org.atzberger.application.selm_builder.TableModel_CouplingOperatorList());
        jTable_CouplingOperatorList.setName("jTable_CouplingOperatorList"); // NOI18N
        jScrollPane3.setViewportView(jTable_CouplingOperatorList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Organize_Controls, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel_Organize_Controls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_Edit_CouplingOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Edit_CouplingOpActionPerformed
      applSharedData.FrameView_Application_Main.openInDockableWindowPanel(applSharedData.FrameView_Application_Main.jPanel_Editor_CouplingOp);
}//GEN-LAST:event_jButton_Edit_CouplingOpActionPerformed

    private void jComboBox_Add_CouplingOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Add_CouplingOpActionPerformed

      if (evt.getActionCommand().equals("comboBoxChanged")) {

        String selectedType = (String) jComboBox_Add_CouplingOp.getSelectedItem();

        if (selectedType != null) {

          SELM_CouplingOperator   newCouplingOp      = null;
          SELM_CouplingOperator[] couplingOpList_new = null;
          SELM_CouplingOperator[] couplingOpList     = applSharedData.jTable_MainData.getCouplingOpList();

          /* loop over the CouplingOperator types and instantiate a class of the appropriate type */
          for (int k = 0; k < applSharedData.jPanel_CouplingOp_list.length; k++) {
            JPanel_CouplingOperator jPanel_CouplingOperator = applSharedData.jPanel_CouplingOp_list[k];

            //System.out.println("JPanel_Edit_CouplingOpList : jComboBox_Add_CouplingOpActionPerformed ");
            //System.out.println("selectedType = " + selectedType);
            //System.out.println("jPanel_CouplingOperator.getName() = " + jPanel_CouplingOperator.getName());

            if (selectedType.equals(jPanel_CouplingOperator.getName())) {

              //System.out.println("FOUND TYPE !!!!");
              
              Atz_Object_Factory atz_Object_Factory = jPanel_CouplingOperator.getObjectFactory();

              if (atz_Object_Factory == null) {  /* use default approach (deprecated) */

                String packageName   = this.getClass().getPackage().getName();//"pja_desktopapplication1";
                String startsWithStr = "SELM_CouplingOperator_";
                String className     = packageName + "." + startsWithStr + jPanel_CouplingOperator.getName();

                newCouplingOp = (SELM_CouplingOperator) Atz_ClassLoader.loadAndInstantiateClass(className, this.getClass().getClassLoader());

              } else {

                //System.out.println("Using object factory to make instance");
                newCouplingOp = (SELM_CouplingOperator) atz_Object_Factory.getNewInstance();

                //System.out.println("newCouplingOp.getName() = " + newCouplingOp.getName());
              }

            } /* end match of CouplingOperator selected name */

          } /* end of k loop */

          if (newCouplingOp != null) {
            /* add the couplingOp to the list */
            int N = couplingOpList.length;
            couplingOpList_new = new SELM_CouplingOperator[N + 1];
            System.arraycopy(couplingOpList, 0,
              couplingOpList_new, 0, N);

            couplingOpList_new[N] = newCouplingOp;

            couplingOpList = couplingOpList_new;

            applSharedData.jTable_MainData.setCouplingOpList(couplingOpList);
          }

          /* reset the selection to zero */
          jComboBox_Add_CouplingOp.setSelectedIndex(0);

        }

      } /* end of action command check */
    }//GEN-LAST:event_jComboBox_Add_CouplingOpActionPerformed

    private void jButton_Remove_CouplingOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Remove_CouplingOpActionPerformed

      /* Determine the selected rows and remove entries from the couplingOpList */
      int selectedRows[] = jTable_CouplingOperatorList.getSelectedRows();

      if (selectedRows.length > 0) {

        int k;
        SELM_CouplingOperator[] couplingOpList = applSharedData.jTable_MainData.getCouplingOpList();
        int N = couplingOpList.length;
        int mask[] = new int[N];
        int I;
        int newN;
        SELM_CouplingOperator[] couplingOpList_new;

        for (k = 0; k < N; k++) {
          mask[k] = 1; /* indicates to keep this entry */
        }

        newN = N;
        for (k = 0; k < selectedRows.length; k++) {
          I = selectedRows[k];
          mask[I] = 0; /* indicates this is row to delete */
          newN--;
        }

        couplingOpList_new = new SELM_CouplingOperator[newN];
        I = 0;
        for (k = 0; k < N; k++) {
          if (mask[k] == 1) {
            couplingOpList_new[I] = couplingOpList[k];
            I++;
          }
        }

        couplingOpList = couplingOpList_new;

        applSharedData.jTable_MainData.setCouplingOpList(couplingOpList);

        /* set the selected row */
        if (selectedRows[0] < newN) {
          jTable_CouplingOperatorList.setRowSelectionInterval(selectedRows[0], selectedRows[0]);
        } else if (newN > 0) {
          jTable_CouplingOperatorList.setRowSelectionInterval(newN - 1, newN - 1);
        }

      }
    }//GEN-LAST:event_jButton_Remove_CouplingOpActionPerformed

 
    public void jTable_CouplingOpList_tableChanged(TableModelEvent e)  {

    /* update the interaction names using the table values */
    if (jTable_CouplingOpList_validForUse) {

      SELM_CouplingOperator[] CouplingOpList  = applSharedData.jTable_MainData.getCouplingOpList();
      TableModel_CouplingOperatorList model   = (TableModel_CouplingOperatorList) jTable_CouplingOperatorList.getModel();

      for (int k = 0; k < CouplingOpList.length; k++) {
        (CouplingOpList[k]).CouplingOpName = (String) model.getValueAt(k,0); /* interaction name */
      }

      /* set the interaction list (notify of changes) */
      applSharedData.jTable_MainData.setCouplingOpList(CouplingOpList);
    }

  }

  public void setCouplingOpKnownTypes(String[] listCouplingOpKnownTypesStr_in) {

    listCouplingOpKnownTypesStr = listCouplingOpKnownTypesStr_in;

    jComboBox_Add_CouplingOp.removeAllItems();
    jComboBox_Add_CouplingOp.addItem("Add Coupling Operator");
    for (int k = 0; k < applSharedData.jPanel_CouplingOp_list.length; k++) {
      jComboBox_Add_CouplingOp.addItem(listCouplingOpKnownTypesStr[k]);
    }

    repaint();
  }

  public String[] getCouplingOpKnownTypes() {
    return listCouplingOpKnownTypesStr;
  }
  
  public void setTableFromCouplingOpList(SELM_CouplingOperator[] CouplingOpList) {

    TableModel_CouplingOperatorList model  = (TableModel_CouplingOperatorList) jTable_CouplingOperatorList.getModel();

    jTable_CouplingOpList_validForUse = false; /* indicates rebuilding table */
    model.removeAllEntries();
    for (int k = 0; k < CouplingOpList.length; k++) {
      model.setValueAt((CouplingOpList[k]).CouplingOpName, k, 0, TableModel_CouplingOperatorList.EDITABLE);
      model.setValueAt((CouplingOpList[k]).CouplingOpTypeStr, k, 1, TableModel_CouplingOperatorList.NOT_EDITABLE);

      model.fireTableCellUpdated(k, 0);
      model.fireTableCellUpdated(k, 1);
    }
    jTable_CouplingOpList_validForUse = true;

  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Edit_CouplingOp;
    private javax.swing.JButton jButton_Remove_CouplingOp;
    private javax.swing.JComboBox jComboBox_Add_CouplingOp;
    private javax.swing.JPanel jPanel_Organize_Controls;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_CouplingOperatorList;
    // End of variables declaration//GEN-END:variables

  public boolean jTable_CouplingOpList_validForUse  = false;

}
