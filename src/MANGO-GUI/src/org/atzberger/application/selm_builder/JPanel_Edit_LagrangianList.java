package org.atzberger.application.selm_builder;

import org.atzberger.mango.table.JTable_Properties1_Default;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * Panel for editing the list of named data of this type.
 *
 * @author Paul J. Atzberger
 *
 * @see <a href="http://www.atzberger.org">http://www.atzberger.org</a>
 */
public class JPanel_Edit_LagrangianList extends javax.swing.JPanel {

  application_SharedData applSharedData = null;

  String [] listLagrangianKnownTypesStr = new String[0];

  /** Creates new form JPanel_Edit_LagrangianList */
  public JPanel_Edit_LagrangianList() {
    initComponents();

    jTable_LagrangianList.getModel().addTableModelListener(new TableModelListener() {
      public void tableChanged(TableModelEvent e)  {
        jTable_LagrangianList_tableChanged(e);
      }
    });

  }

  public JPanel_Edit_LagrangianList(application_SharedData applSharedData_in) {
    this(); /* call constructor */
    applSharedData = applSharedData_in;    
  }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane2 = new javax.swing.JScrollPane();
    jTable_LagrangianList = new org.atzberger.mango.table.JTable_Properties1_Default();
    jPanel2 = new javax.swing.JPanel();
    jButton_Remove_Lagrangian_DOF = new javax.swing.JButton();
    jComboBox_Add_Lagrangian_DOF = new javax.swing.JComboBox();
    jButton_Edit_Lagrangian_DOF = new javax.swing.JButton();
    jButton_ExportData = new javax.swing.JButton();
    jButton_ImportData = new javax.swing.JButton();
    jPanel1 = new javax.swing.JPanel();

    setName("Form"); // NOI18N

    jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jScrollPane2.setName("jScrollPane2"); // NOI18N

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.atzberger.application.selm_builder.application_Main.class).getContext().getResourceMap(JPanel_Edit_LagrangianList.class);
    jTable_LagrangianList.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jTable_LagrangianList.border.lineColor"))); // NOI18N
    jTable_LagrangianList.setModel(new org.atzberger.application.selm_builder.TableModel_LagrangianList());
    jTable_LagrangianList.setName("jTable_LagrangianList"); // NOI18N
    jScrollPane2.setViewportView(jTable_LagrangianList);

    jPanel2.setName("jPanel2"); // NOI18N

    jButton_Remove_Lagrangian_DOF.setText(resourceMap.getString("jButton_Remove_Lagrangian_DOF.text")); // NOI18N
    jButton_Remove_Lagrangian_DOF.setName("jButton_Remove_Lagrangian_DOF"); // NOI18N
    jButton_Remove_Lagrangian_DOF.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton_Remove_Lagrangian_DOFActionPerformed(evt);
      }
    });

    jComboBox_Add_Lagrangian_DOF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Add Lagrangian DOF", "Item 1", "Item 2" }));
    jComboBox_Add_Lagrangian_DOF.setName("jComboBox_Add_Lagrangian_DOF"); // NOI18N
    jComboBox_Add_Lagrangian_DOF.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jComboBox_Add_Lagrangian_DOFActionPerformed(evt);
      }
    });

    jButton_Edit_Lagrangian_DOF.setText(resourceMap.getString("jButton_Edit_Lagrangian_DOF.text")); // NOI18N
    jButton_Edit_Lagrangian_DOF.setName("jButton_Edit_Lagrangian_DOF"); // NOI18N
    jButton_Edit_Lagrangian_DOF.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton_Edit_Lagrangian_DOFActionPerformed(evt);
      }
    });

    jButton_ExportData.setText(resourceMap.getString("jButton_ExportData.text")); // NOI18N
    jButton_ExportData.setName("jButton_ExportData"); // NOI18N
    jButton_ExportData.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton_ExportDataActionPerformed(evt);
      }
    });

    jButton_ImportData.setText(resourceMap.getString("jButton_ImportData.text")); // NOI18N
    jButton_ImportData.setName("jButton_ImportData"); // NOI18N
    jButton_ImportData.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton_ImportDataActionPerformed(evt);
      }
    });

    jPanel1.setName("jPanel1"); // NOI18N

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 39, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 20, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addComponent(jButton_ImportData)
            .addGap(18, 18, 18)
            .addComponent(jButton_ExportData))
          .addComponent(jComboBox_Add_Lagrangian_DOF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 156, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(114, 114, 114))
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton_Edit_Lagrangian_DOF)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
        .addComponent(jButton_Remove_Lagrangian_DOF, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addGap(1, 1, 1)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jComboBox_Add_Lagrangian_DOF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton_Edit_Lagrangian_DOF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
          .addComponent(jButton_Remove_Lagrangian_DOF))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jButton_ImportData)
            .addComponent(jButton_ExportData))
          .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
        .addGap(14, 14, 14))
      .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
  }// </editor-fold>//GEN-END:initComponents

    private void jButton_Remove_Lagrangian_DOFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Remove_Lagrangian_DOFActionPerformed


      /* Determine the selected rows and remove entries from the lagrangianList */
      int selectedRows[] = jTable_LagrangianList.getSelectedRows();

      if (selectedRows.length > 0) {

        int k;
        SELM_Lagrangian[] lagrangianList = applSharedData.jTable_MainData.getLagrangianList();
        int N = lagrangianList.length;
        int mask[] = new int[N];
        int I;
        int newN;
        SELM_Lagrangian[] lagrangianList_new;

        for (k = 0; k < N; k++) {
          mask[k] = 1; /* indicates to keep this entry */
        }

        newN = N;
        for (k = 0; k < selectedRows.length; k++) {
          I = selectedRows[k];
          mask[I] = 0; /* indicates this is row to delete */
          newN--;
        }

        lagrangianList_new = new SELM_Lagrangian[newN];
        I = 0;
        for (k = 0; k < N; k++) {
          if (mask[k] == 1) {
            lagrangianList_new[I] = lagrangianList[k];
            I++;
          }
        }

        lagrangianList = lagrangianList_new;

        applSharedData.jTable_MainData.setLagrangianDOF(lagrangianList);

        /* set the selected row */
        if (selectedRows[0] < newN) {
          jTable_LagrangianList.setRowSelectionInterval(selectedRows[0], selectedRows[0]);
        } else if (newN > 0) {
          jTable_LagrangianList.setRowSelectionInterval(newN - 1, newN - 1);
        }

      }
}//GEN-LAST:event_jButton_Remove_Lagrangian_DOFActionPerformed

    private void jComboBox_Add_Lagrangian_DOFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Add_Lagrangian_DOFActionPerformed


      if (evt.getActionCommand().equals("comboBoxChanged")) {

        String selectedType = (String) jComboBox_Add_Lagrangian_DOF.getSelectedItem();

        if (selectedType != null) {

          Object obj = null;

          SELM_Lagrangian newLagrangian = null;
          SELM_Lagrangian[] lagrangianList_new;
          SELM_Lagrangian[] lagrangianList = applSharedData.jTable_MainData.getLagrangianList();

          /* loop over the Lagrangian types and instantiate a class of the appropriate type */
          for (int k = 0; k < applSharedData.jPanel_Lagrangian_DOF_list.length; k++) {
            JPanel_Lagrangian jPanel_Lagrangian = applSharedData.jPanel_Lagrangian_DOF_list[k];

            if (selectedType.equals(jPanel_Lagrangian.getName())) {

              Atz_Object_Factory atz_Object_Factory = jPanel_Lagrangian.getObjectFactory();

              if (atz_Object_Factory == null) {  /* use default approach (deprecated) */

                String packageName   = this.getClass().getPackage().getName();//"pja_desktopapplication1";
                String startsWithStr = "SELM_Lagrangian_";
                String className     = packageName + "." + startsWithStr + jPanel_Lagrangian.getName();

                newLagrangian = (SELM_Lagrangian) Atz_ClassLoader.loadAndInstantiateClass(className, this.getClass().getClassLoader());

              } else {
                newLagrangian = (SELM_Lagrangian) atz_Object_Factory.getNewInstance();
              }

                            
            } /* end match of Lagrangian selected name */

          } /* end of k loop */

          if (newLagrangian != null) {
            /* add the lagrangian to the list */
            int N = lagrangianList.length;
            lagrangianList_new = new SELM_Lagrangian[N + 1];
            System.arraycopy(lagrangianList, 0,
              lagrangianList_new, 0, N);

            lagrangianList_new[N] = newLagrangian;

            lagrangianList = lagrangianList_new;

            applSharedData.jTable_MainData.setLagrangianDOF(lagrangianList);

            //System.out.println("JPanel_Edit_LagrangianList : jComboBox_Add_Lagrangian_DOFActionPerformed ");
            //System.out.println(" setup new lagrangian list");
          }

          /* reset the selection to zero */
          jComboBox_Add_Lagrangian_DOF.setSelectedIndex(0);

        }

      } /* end of action command check */

    }//GEN-LAST:event_jComboBox_Add_Lagrangian_DOFActionPerformed

    private void jButton_Edit_Lagrangian_DOFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Edit_Lagrangian_DOFActionPerformed
      applSharedData.FrameView_Application_Main.openInDockableWindowPanel(applSharedData.FrameView_Application_Main.jPanel_Editor_Lagrangian_DOF);
}//GEN-LAST:event_jButton_Edit_Lagrangian_DOFActionPerformed

    private void jButton_ImportDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ImportDataActionPerformed

      if (evt.getActionCommand().equals("Import Data")) {

        int returnVal;
        Object obj = null;

        SELM_Lagrangian newLagrangian = null;

        //jFileChooser.setCurrentDirectory();

        JFileChooser jFileChooser = new JFileChooser();

        jFileChooser.setDialogTitle("Import Data : SELM_Lagrangian");
        jFileChooser.resetChoosableFileFilters();
        String[] listExtensions = new String[listLagrangianKnownTypesStr.length];
        String descriptionExt = "SELM Lagrangian data files with extensions of known types. ";
        //listExtensions[0] = ".SELM_Lagrangian";
        for (int k = 0; k < listLagrangianKnownTypesStr.length; k++) {
          listExtensions[k] = ".SELM_Lagrangian_" + listLagrangianKnownTypesStr[k];
        }

        jFileChooser.setFileFilter(new Atz_FileFilter(listExtensions,descriptionExt));

        jFileChooser.setMultiSelectionEnabled(true);
        
        //jFileChooser.addChoosableFileFilter(new Atz_FileFilter(".SELM_Lagrangian", "SELM Lagrangian Files"));
        //jFileChooser.addChoosableFileFilter(new Atz_FileFilter(".SELM_Lagrangian_CONTROL_PTS_BASIC1", "SELM Lagrangian CONTROL_PTS_BASIC1"));
        
        jFileChooser.setDialogType(JFileChooser.OPEN_DIALOG);

        //returnVal = jFileChooser.showDialog(mainPanel, "Import Data");
        returnVal = jFileChooser.showDialog(this, "Import Data");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
          File[] fileList = jFileChooser.getSelectedFiles();

          for (int fileIndex = 0; fileIndex < fileList.length; fileIndex++) {
            File file = fileList[fileIndex];
            //System.out.println("File " + fileIndex + "select was:" + file.getAbsolutePath());

            /* parse the Lagrangian type, use the type name to determine which class to use
            to parse the data (maybe just use the file extension for this purpose) */

            /* loop over the Lagrangian types and instantiate a class of the appropriate type */
            //for (int k = 0; k < applSharedData.jPanel_Lagrangian_DOF_list.length; k++) {
            //  jPanel_Lagrangian_DOF = applSharedData.jPanel_Lagrangian_DOF_list[k];

            //  if (selectedType.equals(jPanel_Lagrangian_DOF.getName())) {

            //    String packageName = this.getClass().getPackage().getName() //"pja_desktopapplication1";
            //    String startsWithStr = "SELM_Lagrangian_";
            //    String className = packageName + "." + startsWithStr + jPanel_Lagrangian_DOF.getName();

            //    newLagrangian = (SELM_Lagrangian) loadAndInstantiateClass(className);

            //  } /* end match of Lagrangian_DOF selected name */

            //} /* end of k loop */

            /* determine type and parse the file */
            String filename = file.getAbsolutePath();
            String[] parts = filename.split(".SELM_Lagrangian_");
            String typeStr = parts[parts.length - 1];

            /* determine if this type is among the known types */
            boolean flagKnown = false;
            for (int k = 0; k < this.listLagrangianKnownTypesStr.length; k++) {
              if (this.listLagrangianKnownTypesStr[k].equals(typeStr)) {
                flagKnown = true;
              }
            }

            if (flagKnown) { /* try to load the class */

              String packageName = this.getClass().getPackage().getName(); //"pja_desktopapplication1";
              String startsWithStr = "SELM_Lagrangian_";
              String className = packageName + "." + startsWithStr + typeStr;

              newLagrangian = (SELM_Lagrangian) Atz_ClassLoader.loadAndInstantiateClass(className, this.getClass().getClassLoader());

              newLagrangian.importData(filename, SELM_Lagrangian.FILE_TYPE_XML);

            } else {
              /* issue warning */
              Object[] options = {"OK"};

              int n = JOptionPane.showOptionDialog(applSharedData.FrameView_Application_Main.getFrame(),
                "The selected file appears to be of a type not yet supported. \n \nDetected type = " + typeStr + ". \n" + "File name = " + filename,
                "Import Data",
                JOptionPane.OK_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);
            }

//
//          if (file.getAbsolutePath().endsWith(".SELM_Lagrangian_CONTROL_PTS_BASIC1")) {
//
//            SELM_Lagrangian_CONTROL_PTS_BASIC1 SELM_Lagrangian_CONTROL_PTS_BASIC1
//              = new SELM_Lagrangian_CONTROL_PTS_BASIC1();
//
//            String filename = file.getAbsolutePath();
//            //SELM_Lagrangian_CONTROLPTS_BASIC1.parse(file.getAbsolutePath());
//
//            /* for now just use the Control_PTS_BASIC1 type */
//            newLagrangian = (SELM_Lagrangian) new SELM_Lagrangian_CONTROL_PTS_BASIC1();
//            newLagrangian.importData(filename, 0);
//
//          }

            if (newLagrangian != null) {

              SELM_Lagrangian[] lagrangianList_new;
              SELM_Lagrangian[] lagrangianList = applSharedData.jTable_MainData.getLagrangianList();

              /* add the lagrangian to the list */
              int N = lagrangianList.length;
              lagrangianList_new = new SELM_Lagrangian[N + 1];
              System.arraycopy(lagrangianList, 0,
                lagrangianList_new, 0, N);

              lagrangianList_new[N] = newLagrangian;

              lagrangianList = lagrangianList_new;

              applSharedData.jTable_MainData.setLagrangianDOF(lagrangianList);
            }

            /* reset the selection to zero */
            jComboBox_Add_Lagrangian_DOF.setSelectedIndex(0);


          } /* end of fileIndex loop */

          /*
          try {
          //System.out.println("File select was:" + file.getAbsolutePath());
          // What to do with the file, e.g. display it in a TextArea
          //textarea.read(new FileReader(file.getAbsolutePath()), null);
          } catch (IOException ex) {
          //System.out.println("problem accessing file" + file.getAbsolutePath());
          }
           */
        } else {
          //System.out.println("File access cancelled by user.");
        }


      } /* end of action command check */
}//GEN-LAST:event_jButton_ImportDataActionPerformed

    private void jButton_ExportDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ExportDataActionPerformed

      if (evt.getActionCommand().equals("Export Data")) {

        /* loop over all of the selected Lagrangian DOF and output to disk */

        int        returnVal;
        Object obj = null;

        SELM_Lagrangian newLagrangian = null;

        //jFileChooser.setCurrentDirectory();

        JFileChooser jFileChooser = new JFileChooser();

        jFileChooser.setDialogTitle("Export Path for SELM_Lagrangian Data");
        jFileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
        jFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        /*
        jFileChooser.resetChoosableFileFilters();
        jFileChooser.addChoosableFileFilter(new Atz_FileFilter(".SELM_Lagrangian", "SELM Lagrangian Files"));
        for (int k = 0; k < listLagrangianKnownTypesStr.length; k++) {
          jFileChooser.addChoosableFileFilter(new Atz_FileFilter(".SELM_Lagrangian_" + listLagrangianKnownTypesStr[k],
                                                                 "SELM Lagrangian of type " + listLagrangianKnownTypesStr[k]));
        }
         */

        //jFileChooser

        //returnVal = jFileChooser.showDialog(mainPanel, "Export Data");
        returnVal = jFileChooser.showDialog(this, "Export");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
          File file = jFileChooser.getSelectedFile();

          //System.out.println("File path select was:" + file.getAbsolutePath());

          int[] selectedIndex = jTable_LagrangianList.getSelectedRows();

          SELM_Lagrangian[] lagrangianList = applSharedData.jTable_MainData.getLagrangianList();

          String filenamePath = file.getAbsolutePath() + File.separator;

          for (int k = 0; k < selectedIndex.length; k++) {

            int I = selectedIndex[k];

            if (I < lagrangianList.length) {
              SELM_Lagrangian lagrangianSelected = lagrangianList[I];

              String filename_new = filenamePath + lagrangianSelected.LagrangianName + "." + "SELM_Lagrangian_" + lagrangianSelected.LagrangianTypeStr;

              /*
              String filename_new = "";
              if (filename.contains(".")) {
                if (selectedIndex.length > 1) {
                  filename_new = filename.replace(".", "_" + Integer.toString(k) + ".");
                }
              } else {
                if (selectedIndex.length > 1) {
                  filename_new = filename + "_" + Integer.toString(k) + "." + "SELM_Lagrangian_" + lagrangianSelected.LagrangianTypeStr;
                } else {
                  filename_new = filename + "." + "SELM_Lagrangian_" + lagrangianSelected.LagrangianTypeStr;
                }
              }
               */

              lagrangianSelected.exportData(filename_new, SELM_Lagrangian.FILE_TYPE_XML);

            } /* end index within bounds */

          } /* end k loop */

        } else {
          //System.out.println("File access cancelled by user.");
        }


      } /* end of action command check */
    }//GEN-LAST:event_jButton_ExportDataActionPerformed



    public void jTable_LagrangianList_tableChanged(TableModelEvent e)  {

    /* update the interaction names using the table values */
    if (jTable_LagrangianList_validForUse) {

      SELM_Lagrangian[] lagrangianList  = applSharedData.jTable_MainData.getLagrangianList();
      TableModel_LagrangianList model   = (TableModel_LagrangianList) jTable_LagrangianList.getModel();

      for (int k = 0; k < lagrangianList.length; k++) {
        (lagrangianList[k]).LagrangianName = (String) model.getValueAt(k,0); /* interaction name */
      }

      /* set the lagrangian list (notify of changes) */
      applSharedData.jTable_MainData.setLagrangianDOF(lagrangianList);

      //System.out.println("JPanel_Edit_LagrangianList : jTable_LagrangianList_tableChanged ");
    }

  }

  public void setLagrangianKnownTypes(String[] listLagrangianKnownTypesStr_in) {

    listLagrangianKnownTypesStr = listLagrangianKnownTypesStr_in;

    jComboBox_Add_Lagrangian_DOF.removeAllItems();
    jComboBox_Add_Lagrangian_DOF.addItem("Add Lagrangian DOF");
    for (int k = 0; k < applSharedData.jPanel_Lagrangian_DOF_list.length; k++) {
      jComboBox_Add_Lagrangian_DOF.addItem(listLagrangianKnownTypesStr[k]);
    }

    repaint();
  }

  public String[] getLagrangianKnownTypes() {
    return listLagrangianKnownTypesStr;
  }
  
  public void setTableFromLagrangianList(SELM_Lagrangian[] lagrangianList) {

    TableModel_LagrangianList model  = (TableModel_LagrangianList) jTable_LagrangianList.getModel();

    jTable_LagrangianList_validForUse = false; /* indicates rebuilding table */
    model.removeAllEntries();
    for (int k = 0; k < lagrangianList.length; k++) {
      model.setValueAt((lagrangianList[k]).LagrangianName, k, 0, TableModel_LagrangianList.EDITABLE);
      model.setValueAt((lagrangianList[k]).LagrangianTypeStr, k, 1, TableModel_LagrangianList.NOT_EDITABLE);

      model.fireTableCellUpdated(k, 0);
      model.fireTableCellUpdated(k, 1);
    }
    jTable_LagrangianList_validForUse = true;

  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton_Edit_Lagrangian_DOF;
  private javax.swing.JButton jButton_ExportData;
  private javax.swing.JButton jButton_ImportData;
  private javax.swing.JButton jButton_Remove_Lagrangian_DOF;
  private javax.swing.JComboBox jComboBox_Add_Lagrangian_DOF;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane2;
  public javax.swing.JTable jTable_LagrangianList;
  // End of variables declaration//GEN-END:variables

  public boolean jTable_LagrangianList_validForUse  = false;

}
