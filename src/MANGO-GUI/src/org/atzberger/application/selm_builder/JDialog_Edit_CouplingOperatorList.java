package org.atzberger.application.selm_builder;

import org.atzberger.mango.table.JDialog_Edit;
import org.atzberger.mango.table.JTable_Properties1_Default;
import javax.swing.JButton;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableModel;

/**
 *
 * Editor for the list of named data entries.
 *
 * @author Paul J. Atzberger
 *
 * @see <a href="http://www.atzberger.org">http://www.atzberger.org</a>
 */
public class JDialog_Edit_CouplingOperatorList extends JDialog_Edit implements TableModelListener {

  //protected static final String ACTION_BUTTON_OK = "ACTION_BUTTON_OK";
  //protected static final String ACTION_BUTTON_CANCEL = "ACTION_BUTTON_CANCEL";
  JButton jButton_trigger = null;  /* button triggering opening of the dialog */

  Boolean flagChangeValue = false; /* indicates if value should be changed */
  
  TableData_CouplingOperatorList tableData_CouplingOpList = null;

  /** Creates new form JDialog_Edit_CouplingOperatorList */
  public JDialog_Edit_CouplingOperatorList(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    //modifyComponents();
  }

  public JDialog_Edit_CouplingOperatorList() {
    initComponents();
    //modifyComponents();
    setModal(true);  /* must be Modal to handle event processing correctly */
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jTable_CouplingOpList = new JTable_Properties1_Default();
    jPanel1 = new javax.swing.JPanel();
    jButton_OK = new javax.swing.JButton();
    jButton_Cancel = new javax.swing.JButton();
    jButton_Remove = new javax.swing.JButton();
    jComboBox_Add = new javax.swing.JComboBox();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setName("Form"); // NOI18N

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    jTable_CouplingOpList.setModel(new org.atzberger.application.selm_builder.TableModel_CouplingOperatorList());
    jTable_CouplingOpList.getModel().addTableModelListener(this);
    jTable_CouplingOpList.setName("jTable_CouplingOpList"); // NOI18N
    jScrollPane1.setViewportView(jTable_CouplingOpList);

    jPanel1.setName("jPanel1"); // NOI18N

    jButton_OK.setMaximumSize(new java.awt.Dimension(79, 100));
    jButton_OK.setMinimumSize(new java.awt.Dimension(79, 100));
    jButton_OK.setName("jButton_OK"); // NOI18N
    jButton_OK.setPreferredSize(new java.awt.Dimension(79, 100));
    jButton_OK.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton_OKActionPerformed(evt);
      }
    });

    jButton_Cancel.setMaximumSize(new java.awt.Dimension(79, 100));
    jButton_Cancel.setMinimumSize(new java.awt.Dimension(79, 100));
    jButton_Cancel.setName("jButton_Cancel"); // NOI18N
    jButton_Cancel.setPreferredSize(new java.awt.Dimension(79, 100));
    jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton_CancelActionPerformed(evt);
      }
    });

    jButton_Remove.setMaximumSize(new java.awt.Dimension(79, 100));
    jButton_Remove.setMinimumSize(new java.awt.Dimension(79, 100));
    jButton_Remove.setName("jButton_Remove"); // NOI18N
    jButton_Remove.setPreferredSize(new java.awt.Dimension(79, 100));
    jButton_Remove.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton_RemoveActionPerformed(evt);
      }
    });

    jComboBox_Add.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Add Coupling Operator", "PAIRS_HARMONIC", "PAIRS_TABLE" }));
    jComboBox_Add.setName("jComboBox_Add"); // NOI18N
    jComboBox_Add.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jComboBox_AddActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(12, 12, 12)
        .addComponent(jButton_OK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jButton_Cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGap(52, 52, 52)
        .addComponent(jComboBox_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(32, 32, 32)
        .addComponent(jButton_Remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGap(12, 12, 12))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jButton_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jButton_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jButton_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jComboBox_Add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(29, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
            .addGap(12, 12, 12))
          .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButton_OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_OKActionPerformed

    /* register any partially completed edits as being final */
    TableCellEditor editor = jTable_CouplingOpList.getCellEditor();
    if (editor != null) {
      editor.stopCellEditing();
    }

    /* close the window and fire related events */

    this.setVisible(false);
    flagChangeValue = true;
    newValue = tableData_CouplingOpList;

    this.firePropertyChange(ACTION_DIALOG_DONE, 1, 0);
    
  }//GEN-LAST:event_jButton_OKActionPerformed

  private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed
      this.setVisible(false);

      flagChangeValue = false;
      newValue = null;

      this.firePropertyChange(ACTION_DIALOG_DONE, 1, 0);
  }//GEN-LAST:event_jButton_CancelActionPerformed

  private void jButton_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RemoveActionPerformed

    /* Determine the selected rows and remove entries from the CouplingOpList */
    int selectedRows[] = jTable_CouplingOpList.getSelectedRows();

    if (selectedRows.length > 0) {

      int k;
      int N = tableData_CouplingOpList.couplingOpList.length;
      int mask[] = new int[N];
      int I;
      int newN;
      SELM_CouplingOperator[] couplingOpList_new;

      for (k = 0; k < N; k++) {
        mask[k] = 1; /* indicates to keep this entry */
      }

      newN = N;
      for (k = 0; k < selectedRows.length; k++) {
        I = selectedRows[k];
        mask[I] = 0; /* indicates this is row to delete */
        newN--;
      }

      couplingOpList_new = new SELM_CouplingOperator[newN];
      I = 0;
      for (k = 0; k < N; k++) {
        if (mask[k] == 1) {
          couplingOpList_new[I] = tableData_CouplingOpList.couplingOpList[k];
          I++;
        }
      }

      tableData_CouplingOpList.couplingOpList = couplingOpList_new;

      setDataValue(tableData_CouplingOpList, "Name", "Type");

      /* set the selected row */
      if (selectedRows[0] < newN) {
        jTable_CouplingOpList.setRowSelectionInterval(selectedRows[0], selectedRows[0]);
      } else if (newN > 0) {
        jTable_CouplingOpList.setRowSelectionInterval(newN - 1, newN - 1);
      }

    }
                    
  }//GEN-LAST:event_jButton_RemoveActionPerformed

  private void jComboBox_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_AddActionPerformed

    String selectedType = (String) jComboBox_Add.getSelectedItem();

    SELM_CouplingOperator   newCouplingOp = null;
    SELM_CouplingOperator[] couplingOpList_new;
   
    if (selectedType.equals("PAIRS_HARMONIC")) {  /* WARNING: Use class instead */

      SELM_CouplingOperator newCouplingOp_PAIRS_HARMONIC
        = new SELM_CouplingOperator();

      newCouplingOp_PAIRS_HARMONIC.CouplingOpName    = "Name Here";
      
      newCouplingOp = newCouplingOp_PAIRS_HARMONIC;
    }

    if (newCouplingOp != null) {
      /* add the interaction to the list */
      int N = tableData_CouplingOpList.couplingOpList.length;
      couplingOpList_new = new SELM_CouplingOperator[N + 1];
      System.arraycopy(tableData_CouplingOpList.couplingOpList, 0,
              couplingOpList_new, 0, N);

      couplingOpList_new[N] = newCouplingOp;

      tableData_CouplingOpList.couplingOpList = couplingOpList_new;

      setDataValue(tableData_CouplingOpList,"Name","Type");
    }

    /* reset the selection to zero */
    jComboBox_Add.setSelectedIndex(0);

  }//GEN-LAST:event_jComboBox_AddActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        JDialog_Edit_CouplingOperatorList dialog = new JDialog_Edit_CouplingOperatorList(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {

          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton_Cancel;
  private javax.swing.JButton jButton_OK;
  private javax.swing.JButton jButton_Remove;
  private javax.swing.JComboBox jComboBox_Add;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTable_CouplingOpList;
  // End of variables declaration//GEN-END:variables


  public Object getDataValue() {

    //newValue = (Object) jTextField_SimpleArray_Value.getText();

    if (flagChangeValue) {
      return newValue;
    } else {
      return oldValue;
    }

  }

  public void setDataValue(Object dataValue, String dataName, String dataType) {

    SELM_CouplingOperator interaction;
    String name;
    int k, N;

    TableModel_CouplingOperatorList tableModel_CouplingOpList;

    super.setDataValue(dataValue, dataName, dataType);

    tableModel_CouplingOpList = (TableModel_CouplingOperatorList) jTable_CouplingOpList.getModel();

    tableData_CouplingOpList = (TableData_CouplingOperatorList) dataValue;

    /* setup the table values */
    N = tableData_CouplingOpList.couplingOpList.length;
    for (k = 0; k < N; k++) {
      interaction = tableData_CouplingOpList.couplingOpList[k];
      
      tableModel_CouplingOpList.setValueAt(interaction.CouplingOpName, k, 0, tableModel_CouplingOpList.EDITABLE);
      tableModel_CouplingOpList.setValueAt(interaction.CouplingOpTypeStr, k, 1, tableModel_CouplingOpList.NOT_EDITABLE);

    }

    tableModel_CouplingOpList.maxRowUsed = N - 1;

    tableModel_CouplingOpList.fireTableDataChanged();

    
  }

  public void tableChanged(TableModelEvent e) {

    int row    = e.getFirstRow();
    int column = e.getColumn();

    SELM_CouplingOperator interaction;

    TableModel model = (TableModel) e.getSource();

    Object data       = model.getValueAt(row, column); /* not column -1 since not selectable */
       
    if ( (data != null) && (e.getType() == e.UPDATE) && (column == 0) ) {            
      /* update all the interaction data */      
      interaction                                    = tableData_CouplingOpList.couplingOpList[row];
      interaction.CouplingOpName                    = (String) model.getValueAt(row, 0);
      //tableData_CouplingOpList.couplingOpList[row] = interaction;
    }

  }




  @Override
  public void setVisible(boolean flag) {
    super.setVisible(flag);

    if (flag == false) {
      //jTable_CouplingOpList.changeSelection(0, 1, false, false);
      jTable_CouplingOpList.clearSelection();
    }

  }
}
