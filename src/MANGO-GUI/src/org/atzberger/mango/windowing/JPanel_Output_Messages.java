package org.atzberger.mango.windowing;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import org.atzberger.application.selm_builder.JDialog_FontSelector;

/**
 *
 * Display the standard input and out messages embedded within the GUI.
 * 
 * @author Paul J. Atzberger
 *
 * @see <a href="http://www.atzberger.org">http://www.atzberger.org</a>
 */
public class JPanel_Output_Messages extends javax.swing.JPanel {
  
  File lastDirectorySelected = null;

  /** Creates new form JPanel_Output_Messages */
  public JPanel_Output_Messages() {
    initComponents();
  }
  
  public JTextPane_Output getTextPane() {
    return (JTextPane_Output)jTextPane_Output_Messages;
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu = new javax.swing.JPopupMenu();
        jMenuItem_SaveOutput = new javax.swing.JMenuItem();
        jMenuItem_Font = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Clear = new javax.swing.JMenuItem();
        jScrollPane_Output = new javax.swing.JScrollPane();
        jTextPane_Output_Messages = new org.atzberger.mango.windowing.JTextPane_Output();

        jPopupMenu.setName("jPopupMenu"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.atzberger.application.selm_builder.application_Main.class).getContext().getResourceMap(JPanel_Output_Messages.class);
        jMenuItem_SaveOutput.setText(resourceMap.getString("jMenuItem_SaveOutput.text")); // NOI18N
        jMenuItem_SaveOutput.setToolTipText(resourceMap.getString("jMenuItem_SaveOutput.toolTipText")); // NOI18N
        jMenuItem_SaveOutput.setName("jMenuItem_SaveOutput"); // NOI18N
        jMenuItem_SaveOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SaveOutputActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItem_SaveOutput);

        jMenuItem_Font.setText(resourceMap.getString("jMenuItem_Font.text")); // NOI18N
        jMenuItem_Font.setToolTipText(resourceMap.getString("jMenuItem_Font.toolTipText")); // NOI18N
        jMenuItem_Font.setName("jMenuItem_Font"); // NOI18N
        jMenuItem_Font.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_FontActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItem_Font);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jPopupMenu.add(jSeparator1);

        jMenuItem_Clear.setText(resourceMap.getString("jMenuItem_Clear.text")); // NOI18N
        jMenuItem_Clear.setToolTipText(resourceMap.getString("jMenuItem_Clear.toolTipText")); // NOI18N
        jMenuItem_Clear.setName("jMenuItem_Clear"); // NOI18N
        jMenuItem_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ClearActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItem_Clear);

        setName("Output"); // NOI18N
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane_Output.setName("jScrollPane_Output"); // NOI18N

        jTextPane_Output_Messages.setComponentPopupMenu(jPopupMenu);
        jTextPane_Output_Messages.setName("jTextPane_Output_Messages"); // NOI18N
        jScrollPane_Output.setViewportView(jTextPane_Output_Messages);

        add(jScrollPane_Output);
    }// </editor-fold>//GEN-END:initComponents

  private void jMenuItem_SaveOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveOutputActionPerformed
    
    JTextPane_Output jTextPane_Output = (JTextPane_Output) jTextPane_Output_Messages;

    /* Use File chooser to select python script */
    JFileChooser jFileChooser = new JFileChooser();

    jFileChooser.setDialogTitle("Save Output");
    jFileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
    jFileChooser.resetChoosableFileFilters();
    //jFileChooser.addChoosableFileFilter(new Atz_FileFilter(".out", "Output Files"));

    if (lastDirectorySelected != null) {
      jFileChooser.setCurrentDirectory(lastDirectorySelected);
    }

    int returnVal = jFileChooser.showDialog(this, "Save");

    if (returnVal == JFileChooser.APPROVE_OPTION) {
      File file = jFileChooser.getSelectedFile();

      lastDirectorySelected = file;

      //System.out.println("File select was:" + file.getAbsolutePath());       
      String filePath = file.getPath();

      try {
        FileWriter outFile = new FileWriter(filePath);
        PrintWriter out = new PrintWriter(outFile);

        /* write test file of the entire text buffer */
        out.println(jTextPane_Output.getText());
        out.close();

      } catch (IOException e) {
        e.printStackTrace();
      }

    }

  }//GEN-LAST:event_jMenuItem_SaveOutputActionPerformed

  private void jMenuItem_FontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_FontActionPerformed
    
    /* attempt to show currently used font */
    JTextPane_Output jTextPane_Output = (JTextPane_Output) jTextPane_Output_Messages;

    String fontData_fontFamily_default = "DialogInput";
    int fontData_fontSize_default = 12;
    boolean fontData_fontBold_default = true;

    String fontData_fontFamily;
    int fontData_fontSize;
    boolean fontData_fontBold;

    /* use preference values */
    Preferences prefs = Preferences.userNodeForPackage(JTextPane_Output.class);
    fontData_fontFamily = prefs.get("JTextPane_Output.FontFamily", fontData_fontFamily_default);
    fontData_fontSize = Integer.parseInt(prefs.get("JTextPane_Output.FontSize", Integer.toString(fontData_fontSize_default)));
    fontData_fontBold = Boolean.parseBoolean(prefs.get("JTextPane_Output.FontBold", Boolean.toString(fontData_fontBold_default)));

    /* -- Show font selection dialog -- */
    JDialog_FontSelector jDialog_FontSelector = new JDialog_FontSelector(null);

    jDialog_FontSelector.attempToSelectFont(fontData_fontFamily, fontData_fontSize, fontData_fontBold);
    jDialog_FontSelector.setVisible(true);

    /* update the jython data */
    //jythonPreferencesData = (HashMap) jDialog_preferences.getDataValue();

    if (jDialog_FontSelector.wasFontSelected()) {  /* set the new preferences */
      /* setup the data using the preferences */
      // Set the user preferences for the Jython JAR distribution, paths, startup scripts, etc...        
      prefs.put("JTextPane_Output.FontFamily", jDialog_FontSelector.getSelectedName());
      prefs.put("JTextPane_Output.FontSize", Integer.toString(jDialog_FontSelector.getSelectedSize()));
      prefs.put("JTextPane_Output.FontBold", Boolean.toString(jDialog_FontSelector.getSelectedBold()));

      jTextPane_Output.setStylesFromPrefs();
    }

    //Atz_Jython_Console_useReflection.updateConfigurationForFutureRuns(jythonPreferencesData);
    
  }//GEN-LAST:event_jMenuItem_FontActionPerformed

  private void jMenuItem_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ClearActionPerformed

    JTextPane_Output jTextPane_Output = (JTextPane_Output) jTextPane_Output_Messages;

    jTextPane_Output.clearAllText();

  }//GEN-LAST:event_jMenuItem_ClearActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jMenuItem_Clear;
    private javax.swing.JMenuItem jMenuItem_Font;
    private javax.swing.JMenuItem jMenuItem_SaveOutput;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane_Output;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    protected javax.swing.JTextPane jTextPane_Output_Messages;
    // End of variables declaration//GEN-END:variables
}
